/**
 * Created by justin on 04/03/17.
 */
import React, {Component} from 'react';
import { createContainer } from 'meteor/react-meteor-data';
import Box from 'grommet/components/Box';
import Header from 'grommet/components/Header';
import Anchor from 'grommet/components/Anchor';
import SVGIcon from 'grommet/components/SVGIcon';
import CreditCard from 'grommet/components/icons/base/CreditCard';
import Checkmark from 'grommet/components/icons/base/Checkmark';
import Value from 'grommet/components/Value';
import Heading from 'grommet/components/Heading';


import {GetShitDone} from '../../../imports/get_shit_done';
import {Food} from '../../../imports/api/food';

import Card from 'grommet/components/Card';
export default class FoodCard extends Component{
    constructor(props){
        super(props);
    }

    render(){
        let {id, name, calories} = this.props;

        let header = (

            <Header>
                <Box basis="full" align="center">
                <Heading strong={true}
                         tag='h3'>
                    {name}
                </Heading>
                </Box>
            </Header>
        );
        let calorieIcon = (
            <SVGIcon viewBox='90 90 220 220'
                     version='1.1'
                     type="logo"
                     size="medium"
                     >
                <g id="svgg">
                    <path id="path0"
                          d="M150.000 131.250 L 150.000 137.500 156.250 137.500 L 162.500 137.500 162.500 156.250 L 162.500 175.000 156.250 175.000 L 150.000 175.000 150.000 181.250 L 150.000 187.500 156.250 187.500 L 162.500 187.500 162.500 193.750 L 162.500 200.000 187.500 200.000 L 212.500 200.000 212.500 206.250 L 212.500 212.500 225.000 212.500 L 237.500 212.500 237.500 243.750 L 237.500 275.000 250.000 275.000 L 262.500 275.000 262.500 231.250 L 262.500 187.500 256.250 187.500 L 250.000 187.500 250.000 181.250 L 250.000 175.000 243.750 175.000 L 237.500 175.000 237.500 162.500 L 237.500 150.000 243.750 150.000 L 250.000 150.000 250.000 143.750 L 250.000 137.500 256.250 137.500 L 262.500 137.500 262.500 131.250 L 262.500 125.000 256.250 125.000 L 250.000 125.000 250.000 131.250 L 250.000 137.500 243.750 137.500 L 237.500 137.500 237.500 143.750 L 237.500 150.000 225.000 150.000 L 212.500 150.000 212.500 137.500 L 212.500 125.000 206.250 125.000 L 200.000 125.000 200.000 143.750 L 200.000 162.500 187.500 162.500 L 175.000 162.500 175.000 150.000 L 175.000 137.500 168.750 137.500 L 162.500 137.500 162.500 131.250 L 162.500 125.000 156.250 125.000 L 150.000 125.000 150.000 131.250 "
                          stroke="none" fill="#870e0e" fillRule="evenodd"></path>
                    <path id="path1"
                          d="M187.500 118.750 L 187.500 150.000 181.250 150.000 L 175.000 150.000 175.000 156.250 L 175.000 162.500 187.500 162.500 L 200.000 162.500 200.000 143.750 L 200.000 125.000 206.250 125.000 L 212.500 125.000 212.500 137.500 L 212.500 150.000 225.000 150.000 L 237.500 150.000 237.500 162.500 L 237.500 175.000 243.750 175.000 L 250.000 175.000 250.000 181.250 L 250.000 187.500 256.250 187.500 L 262.500 187.500 262.500 231.250 L 262.500 275.000 243.750 275.000 L 225.000 275.000 225.000 281.250 L 225.000 287.500 181.250 287.500 L 137.500 287.500 137.500 281.250 L 137.500 275.000 131.250 275.000 L 125.000 275.000 125.000 256.250 L 125.000 237.500 118.750 237.500 L 112.500 237.500 112.500 256.250 L 112.500 275.000 118.750 275.000 L 125.000 275.000 125.000 281.250 L 125.000 287.500 131.250 287.500 L 137.500 287.500 137.500 293.750 L 137.500 300.000 187.500 300.000 L 237.500 300.000 237.500 293.750 L 237.500 287.500 250.000 287.500 L 262.500 287.500 262.500 281.250 L 262.500 275.000 268.750 275.000 L 275.000 275.000 275.000 231.250 L 275.000 187.500 268.750 187.500 L 262.500 187.500 262.500 175.000 L 262.500 162.500 256.250 162.500 L 250.000 162.500 250.000 156.250 L 250.000 150.000 243.750 150.000 L 237.500 150.000 237.500 143.750 L 237.500 137.500 231.250 137.500 L 225.000 137.500 225.000 125.000 L 225.000 112.500 218.750 112.500 L 212.500 112.500 212.500 106.250 L 212.500 100.000 206.250 100.000 L 200.000 100.000 200.000 93.750 L 200.000 87.500 193.750 87.500 L 187.500 87.500 187.500 118.750 "
                          stroke="none" fill="#b20000" fillRule="evenodd"></path>
                    <path id="path2"
                          d="M150.000 231.250 L 150.000 250.000 156.250 250.000 L 162.500 250.000 162.500 256.250 L 162.500 262.500 187.500 262.500 L 212.500 262.500 212.500 243.750 L 212.500 225.000 193.750 225.000 L 175.000 225.000 175.000 218.750 L 175.000 212.500 162.500 212.500 L 150.000 212.500 150.000 231.250 "
                          stroke="none" fill="#ff8900" fillRule="evenodd"></path>
                    <path id="path3"
                          d="M137.500 156.250 L 137.500 162.500 131.250 162.500 L 125.000 162.500 125.000 181.250 L 125.000 200.000 118.750 200.000 L 112.500 200.000 112.500 218.750 L 112.500 237.500 118.750 237.500 L 125.000 237.500 125.000 256.250 L 125.000 275.000 131.250 275.000 L 137.500 275.000 137.500 281.250 L 137.500 287.500 181.250 287.500 L 225.000 287.500 225.000 281.250 L 225.000 275.000 231.250 275.000 L 237.500 275.000 237.500 243.750 L 237.500 212.500 225.000 212.500 L 212.500 212.500 212.500 206.250 L 212.500 200.000 187.500 200.000 L 162.500 200.000 162.500 193.750 L 162.500 187.500 156.250 187.500 L 150.000 187.500 150.000 168.750 L 150.000 150.000 143.750 150.000 L 137.500 150.000 137.500 156.250 M175.000 218.750 L 175.000 225.000 193.750 225.000 L 212.500 225.000 212.500 243.750 L 212.500 262.500 187.500 262.500 L 162.500 262.500 162.500 256.250 L 162.500 250.000 156.250 250.000 L 150.000 250.000 150.000 231.250 L 150.000 212.500 162.500 212.500 L 175.000 212.500 175.000 218.750 "
                          stroke="none" fill="#ffcc00" fillRule="evenodd"></path>
                </g>
            </SVGIcon>
        );

        let description = (
            <Box
                flex={true}
                justify='center'
                align="center"
                pad={{between: "medium"}}
                direction='row'>
                <Value value={calories}
                       icon={calorieIcon}
                       size="medium"
                />

            </Box>
        );
        let link=(
            <Box align="center" pad="large">
            <Anchor
                    label="Eat this !"
                    onClick={()=>{{this.props.onEat(id)}}}
                    primary={true}
                    animateIcon={true} />
            </Box>
        );
        return (
            <Card className="drop-shadow" margin="medium" description={description} link={link} colorIndex="light-1" key={this.props.name} heading={header}
            />
        )
    }
}


